`print('–ü—Ä–∏–≤—ñ—Ç —ñ–∑ SunToy!')

# –Ü–º–ø–æ—Ä—Ç –±—ñ–±–ª—ñ–æ—Ç–µ–∫

import pygame
import os 
import time
import subprocess
from pydub import AudioSegment
from gpiozero import Button
from signal import pause

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è 

pygame.mixer.init()
volume_level = 0.8 #–ü–æ—á–∞—Ç–∫–æ–≤–∞ –≥—É—á–Ω—ñ—Å—Ç—å

# –ö–Ω–æ–ø–∫–∏

button_play = Button(17)
button_rec = Button(27)

# –ó–º—ñ–Ω–∞ —Å—Ç–∞–Ω—É 

current_tag = None
is_recording = False
recording_process = None 

# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫—É

def play_sound (filename):
  pygame.mixer.music.load(filename)
  pygame.mixer.music.set_volume(volume_level)
  pygame.mixer.music.play()
  while pygame.mixer.music.get_busy():
    time.sleep(0.1)

# –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ç–∞ —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è

def greeting():
   play_sound('sounds/introTurnOn.mp3')
   #play_sound('sounds/black-sabbath_-_iron-man.mp3')
  
  # –†–µ–∞–∫—Ü—ñ—è –Ω–∞ NFC-–º—ñ—Ç–∫—É

def intro_for_tag(tag_id):
  if tag_id == 'Kotygoroshko123':
    play_sound('sounds/introToy.mp3')
  elif tag_id == 'REC456':
    play_sound('sounds/introToy.mp3')

# –ó–∞–ø–∏—Å –º—ñ–∫—Ä–æ—Ñ–æ–Ω—É  
def start_recording():
  global is_recording, recording_process 
  is_recording = True
  print('üéôÔ∏è –ü–æ—á–∞—Ç–æ–∫ –∑–∞–ø–∏—Å—É...')
  recording_process = subprocess.Popen([
    'arecord',
    '-D', 'plughw:3,0',  # –∞–±–æ plughw:1,0 ‚Äî —è–∫—â–æ –≤–∞—à–∞ –∫–∞—Ä—Ç–∞ —ñ–Ω—à–∞
    '-f', 'cd',
    '-t', 'wav',
    '-d', '300',
    '-r', '44100',
    'sounds/recorded_story.wav'
])

  ''' -D plughw:1,0 ‚Äî –≤–∏–±–∏—Ä–∞—î –º—ñ–∫—Ä–æ—Ñ–æ–Ω (–º–æ–∂–µ–º–æ –∑–º—ñ–Ω–∏—Ç–∏, —è–∫—â–æ —Ç—Ä–µ–±–∞)
-f cd ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —è–∫—ñ—Å—Ç—å (16-–±—ñ—Ç, 44100 –ì—Ü)
-t wav ‚Äî —Ç–∏–ø —Ñ–∞–π–ª—É
-d 30 ‚Äî —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å 30 —Å–µ–∫ (–º–æ–∂–µ –æ–±—ñ—Ä–≤–∞—Ç–∏—Å—è —Ä–∞–Ω—ñ—à–µ –≤—Ä—É—á–Ω—É)
& ‚Äî —Ñ–æ–Ω–æ–≤–∏–π —Ä–µ–∂–∏–º, —â–æ–± –ø—Ä–æ–≥—Ä–∞–º–∞ –Ω–µ –∑–∞–≤–∏—Å–ª–∞'''

  # –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É 
def stop_recording():
  global is_recording, recording_process
  if recording_process:
    recording_process.terminate()
    recording_process.wait()
    print('–ó–∞–ø–∏—Å –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
  is_recording = False
  mix_with_background()
  if not os.path.exists('sounds/final_story.wav'):  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –æ–±'—î–¥–Ω–∞–Ω–∏–π —Ñ–∞–π–ª –∑–∞–ø–∏—Å–∞–Ω–æ—ó —ñ—Å—Ç–æ—Ä—ñ—ó
     print('–§–∞–π–ª —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π!')
     return

  # –ú—ñ–∫—à—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É + –º—É–∑–∏–∫–∞
def mix_with_background():
  voice = AudioSegment.from_wav('sounds/recorded_story.wav') +10
  music = AudioSegment.from_mp3('sounds/backgroundSoundForRecord.mp3') - 25 #—Ä–æ–±–∏—Ç—å –∑–≤—É–∫ —Ñ–æ–Ω—É —Ç–∏—Ö—ñ—à–µ –≤—ñ–¥ -1 –¥–æ -25
  while len(music) < len(voice):
    music += music
  music = music[:len(voice)]
  final = music.overlay(voice)
  final.export('sounds/final_story.wav', format='wav')
  print('–û–±—î–¥–Ω–∞–Ω–æ –∑ —Ñ–æ–Ω–æ–º.')

# –†–æ–±–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏ Play
def on_play_pressed():
  if current_tag == 'FOX123':
    play_sound('sounds/storyKotygoroshko.mp3')
  elif current_tag == 'REC456':
    play_sound('sounds/final_story.wav')

# –†–æ–±–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏ Record
def on_rec_pressed():
  if not is_recording:
    start_recording()
  else:
    stop_recording()      

# –°–∏–º—É–ª—è—Ü—ñ—è NFC
def simulate_nfc(tag_id):
  global current_tag
  current_tag = tag_id
  intro_for_tag(tag_id)

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ 
button_play.when_pressed = on_play_pressed
button_rec.when_pressed = on_rec_pressed

# –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
#greeting()

# –û—á—ñ–∫—É–≤–∞–Ω–Ω—è (—É—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–∞–º–∏ –≤ –ø–∞–º—è—Ç—ñ)
#pause()
print('–°–∏–º—É–ª—è—Ü—ñ—è –º—ñ—Ç–∫–∏ REC456 (—Ä–µ–∂–∏–º –∑–∞–ø–∏—Å—É)')
simulate_nfc('REC456')
time.sleep(1)

print('–ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –∑–∞–ø–∏—Å—É - –ø–æ—á–∞—Ç–æ–∫ –∑–∞–ø–∏—Å—É')
on_rec_pressed()
time.sleep(10) #–∑–∞–ø–∏—Å—É—î–º–æ 10 —Å–µ–∫—É–Ω–¥
print('–ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –∑–∞–ø–∏—Å—É –≤–¥—Ä—É–≥–µ - –∑—É–ø–∏–Ω–∫–∞ —ñ –º—ñ–∫—à—É–≤–∞–Ω–Ω—è')
on_rec_pressed()

print('–ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–≥—Ä–∞–≤–∞–Ω–Ω—è - –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª—É')
on_play_pressed()


#
`