import board
import busio
import time
import threading
import RPi.GPIO as GPIO
from digitalio import DigitalInOut
from adafruit_pn532.i2c import PN532_I2C
import vlc
import os

# === GPIO ===
TOUCH_PIN = 17
GPIO.setmode(GPIO.BCM)
GPIO.setup(TOUCH_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)

# === –§–ê–ô–õ–ò ===
greeting_file = "/home/pi/SunToy/SunToy/sounds/introTurnOn.mp3"
kotyhoroshko_intro = "/home/pi/SunToy/SunToy/sounds/fairyTale/storyKotygoroshko.mp3"
kotyhoroshko_story = "/home/pi/SunToy/SunToy/sounds/fairyTale/Kotygoroshko_Full.ogg"

# === –°–¢–ê–ù–ò ===
story_queued = None
player = None
lock = threading.RLock()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—É–¥—ñ–æ —á–µ—Ä–µ–∑ VLC
def play_audio(file_path):
    global player
    with lock:
        if not os.path.exists(file_path):
            print(f"[ERROR] ‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {file_path}")
            return
        if player:
            player.stop()
        player = vlc.MediaPlayer(file_path)
        player.audio_set_volume(100)
        player.play()
        print(f"[üîä] –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è: {file_path}")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —á–µ–∫–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
def wait_until_done():
    while player and player.is_playing():
        time.sleep(0.1)

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
def toggle_pause_resume():
    global story_queued
    with lock:
        print(f"[TOGGLE] queued={story_queued}, playing={player.is_playing() if player else False}")
        if story_queued and (not player or not player.is_playing()):
            file = story_queued
            story_queued = None
            print("‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç —ñ—Å—Ç–æ—Ä—ñ—ó")
            play_audio(file)
            return
        if not player:
            return
        if player.is_playing():
            player.pause()
            print("‚è∏Ô∏è –ü–∞—É–∑–∞")
        else:
            player.play()
            print("‚ñ∂Ô∏è –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è")

# –°–ª—É—Ö–∞—î–º–æ –∫–Ω–æ–ø–∫—É —É –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
def watch_touch():
    prev = GPIO.input(TOUCH_PIN)
    while True:
        cur = GPIO.input(TOUCH_PIN)
        if prev == GPIO.HIGH and cur == GPIO.LOW:
            print("üîò –ö–Ω–æ–ø–∫–∞ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞")
            toggle_pause_resume()
        prev = cur
        time.sleep(0.05)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è NFC PN532
i2c = busio.I2C(board.SCL, board.SDA)
pn532 = PN532_I2C(i2c, debug=False)
ic, ver, rev, support = pn532.firmware_version
print(f"üü¢ PN532 –ø—Ä–æ—à–∏–≤–∫–∞: {ver}.{rev}")
pn532.SAM_configuration()

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def main():
    global story_queued
    print("üëã –Ü–≥—Ä–∞—à–∫–∞ —É–≤—ñ–º–∫–Ω–µ–Ω–∞!")
    play_audio(greeting_file)
    wait_until_done()

    threading.Thread(target=watch_touch, daemon=True).start()

    print("üì° –û—á—ñ–∫—É—î–º–æ NFC –º—ñ—Ç–∫—É...")
    last_uid = None

    while True:
        uid = pn532.read_passive_target(timeout=0.5)
        if uid:
            uid_str = uid.hex()
            if uid_str != last_uid:
                print(f"üìõ –ó—á–∏—Ç–∞–Ω–æ UID: {uid_str}")
                last_uid = uid_str
                if uid_str == "53c5be5d720001":
                    print("üéôÔ∏è Intro –ö–æ—Ç–∏–≥–æ—Ä–æ—à–∫–æ")
                    play_audio(kotyhoroshko_intro)
                    wait_until_done()
                    print("‚è≥ –û—á—ñ–∫—É—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å—Ç–∞—Ä—Ç—É –∫–∞–∑–∫–∏...")
                    story_queued = kotyhoroshko_story
        time.sleep(0.2)

if __name__ == "__main__":
    main()



